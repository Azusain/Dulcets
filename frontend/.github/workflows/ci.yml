name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  # 项目健康检查
  health-check:
    name: 🏥 Project Health Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 📋 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: 📥 Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: 🔍 Check unused components
      working-directory: ./frontend
      run: npm run check:components
      
    - name: 🌍 Check i18n translations
      working-directory: ./frontend
      run: npm run analyze:i18n
      
    - name: 📦 Check dependencies
      working-directory: ./frontend
      run: npm run check:deps

  # TypeScript 类型检查
  type-check:
    name: 🔷 TypeScript Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 📋 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: 📥 Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: 🔷 TypeScript check
      working-directory: ./frontend
      run: npx tsc --noEmit

  # ESLint 检查
  lint:
    name: 🧹 Lint Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 📋 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: 📥 Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: 🧹 Run ESLint
      working-directory: ./frontend
      run: npm run lint

  # 构建测试
  build:
    name: 🏗️ Build Test
    runs-on: ubuntu-latest
    needs: [health-check, type-check, lint]
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 📋 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: 📥 Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: 🏗️ Build project
      working-directory: ./frontend
      run: npm run build
      
    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: frontend/out/
        retention-days: 7

  # 部署到 GitHub Pages (仅在 main 分支)
  deploy:
    name: 🚀 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 📋 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: 📥 Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: 🏗️ Build for production
      working-directory: ./frontend
      run: npm run build
      
    - name: 📄 Setup Pages
      uses: actions/configure-pages@v4
      
    - name: 📤 Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: frontend/out
        
    - name: 🚀 Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
