name: 🔍 Code Quality Check

on:
  pull_request:
    branches: [ main, dev ]
  schedule:
    # 每周一早上 8 点运行
    - cron: '0 8 * * 1'
  workflow_dispatch: # 手动触发

jobs:
  comprehensive-analysis:
    name: 📊 Comprehensive Code Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 📋 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: 📥 Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: 🏥 Complete project health check
      working-directory: ./frontend
      run: npm run check:health
      
    - name: 🧹 Auto-fix lint issues
      working-directory: ./frontend
      run: npm run fix:lint
      
    - name: 📝 Check for changes after auto-fix
      id: check-changes
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "Auto-fix made changes to the code"
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "No auto-fixable issues found"
        fi
      
    - name: 📋 Create auto-fix summary
      if: steps.check-changes.outputs.changes == 'true'
      run: |
        echo "## 🔧 Auto-fix Results" >> $GITHUB_STEP_SUMMARY
        echo "The following files were automatically fixed:" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        git diff --name-only >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "Please review these changes and commit them if appropriate." >> $GITHUB_STEP_SUMMARY

  dependency-audit:
    name: 🔒 Security & Dependency Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 📋 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: 📥 Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: 🔒 Security audit
      working-directory: ./frontend
      run: npm audit --audit-level=moderate
      
    - name: 📦 Check for outdated packages
      working-directory: ./frontend
      run: npm outdated --depth=0 || true
      
    - name: 📊 Generate dependency report
      working-directory: ./frontend
      run: |
        echo "## 📦 Dependency Analysis" >> $GITHUB_STEP_SUMMARY
        echo "### Dependency Usage:" >> $GITHUB_STEP_SUMMARY
        npm run check:deps >> temp_deps.txt 2>&1 || true
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat temp_deps.txt >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        rm temp_deps.txt

  i18n-validation:
    name: 🌍 i18n Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 📋 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: 📥 Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: 🌍 Professional i18n analysis
      working-directory: ./frontend
      run: |
        echo "## 🌍 i18n Analysis Report" >> $GITHUB_STEP_SUMMARY
        npm run analyze:i18n >> temp_i18n.txt 2>&1 || true
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat temp_i18n.txt >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        rm temp_i18n.txt
      
    - name: 🔄 Check for missing translations
      working-directory: ./frontend
      run: |
        # 预览缺失的翻译
        npm run translate:missing > missing_translations.txt 2>&1 || true
        if grep -q "Would add" missing_translations.txt; then
          echo "## ⚠️ Missing Translations Found" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat missing_translations.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "Run \`npm run translate:missing:execute\` to add these translations." >> $GITHUB_STEP_SUMMARY
        fi
        rm missing_translations.txt
      
    - name: 🔄 Check translation inconsistencies
      working-directory: ./frontend
      run: |
        # 预览不一致的翻译
        npm run translate:inconsistent > inconsistent_translations.txt 2>&1 || true
        if grep -q "Fixing:" inconsistent_translations.txt; then
          echo "## ⚠️ Translation Inconsistencies Found" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat inconsistent_translations.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "Run \`npm run translate:inconsistent:execute\` to fix these inconsistencies." >> $GITHUB_STEP_SUMMARY
        fi
        rm inconsistent_translations.txt

  performance-check:
    name: ⚡ Performance Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 📋 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'
        
    - name: 📥 Install dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: 🏗️ Build for analysis
      working-directory: ./frontend
      run: npm run build
      
    - name: 📊 Bundle size analysis
      working-directory: ./frontend
      run: |
        echo "## 📊 Bundle Size Analysis" >> $GITHUB_STEP_SUMMARY
        echo "### Built Files:" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        find out -name "*.js" -o -name "*.css" | head -20 | xargs ls -lh >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        
        echo "### Total Size:" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        du -sh out/ >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

  notify-results:
    name: 📢 Notify Results
    runs-on: ubuntu-latest
    needs: [comprehensive-analysis, dependency-audit, i18n-validation, performance-check]
    if: always()
    
    steps:
    - name: 📋 Create final summary
      run: |
        echo "## 🎯 Code Quality Check Complete" >> $GITHUB_STEP_SUMMARY
        echo "All code quality checks have been completed." >> $GITHUB_STEP_SUMMARY
        echo "Please review the individual job results above." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Job Status:" >> $GITHUB_STEP_SUMMARY
        echo "- 📊 Comprehensive Analysis: ${{ needs.comprehensive-analysis.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- 🔒 Security Audit: ${{ needs.dependency-audit.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- 🌍 i18n Validation: ${{ needs.i18n-validation.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- ⚡ Performance Check: ${{ needs.performance-check.result }}" >> $GITHUB_STEP_SUMMARY
