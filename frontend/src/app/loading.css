/* CSS-Only Loading Animation */
@keyframes fadeOut {
  0% { opacity: 1; visibility: visible; }
  90% { opacity: 1; visibility: visible; }
  100% { opacity: 0; visibility: hidden; }
}

@keyframes fadeOutBackground {
  0% { opacity: 1; }
  70% { opacity: 1; }
  100% { opacity: 0; }
}

@keyframes verticalLineFadeIn {
  0% { opacity: 0; height: 0; transform: scaleY(0); }
  20% { opacity: 1; height: 60px; transform: scaleY(1); }
  80% { opacity: 1; height: 60px; transform: scaleY(1); }
  100% { opacity: 1; height: 60px; transform: scaleY(1); }
}

@keyframes squareSlideIn {
  0% { opacity: 0; transform: translateY(-50%) scaleX(0); }
  20% { opacity: 0; transform: translateY(-50%) scaleX(0); }
  40% { opacity: 1; transform: translateY(-50%) scaleX(1); }
  80% { opacity: 1; transform: translateY(-50%) scaleX(1); }
  100% { opacity: 1; transform: translateY(-50%) scaleX(1); }
}

@keyframes logoScaleAndFade {
  0% { transform: scale(1); opacity: 1; }
  80% { transform: scale(1); opacity: 1; }
  100% { transform: scale(1.3); opacity: 0; }
}

@keyframes fadeInContent {
  0% { opacity: 0; }
  90% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes loadingDots {
  0% { content: '.'; }
  33% { content: '..'; }
  66% { content: '...'; }
  100% { content: '.'; }
}

.loading-screen {
  animation: fadeOut 2.5s ease-in-out forwards;
  background: linear-gradient(135deg, #1f2937, #111827);
}

.loading-screen::before {
  content: '';
  position: absolute;
  inset: 0;
  background: inherit;
  animation: fadeOutBackground 2.5s ease-in-out forwards;
}

.main-content-react {
  /* Controlled by React state, no CSS animation needed */
}

.loading-animation {
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  animation: logoScaleAndFade 2.5s ease-in-out forwards;
}

.vertical-line {
  width: 3px;
  height: 60px;
  background: linear-gradient(to bottom, #3b82f6, #06b6d4);
  border-radius: 2px;
  animation: verticalLineFadeIn 2.5s ease-in-out forwards;
  position: relative;
  z-index: 2;
  transform-origin: center center;
}

.square {
  width: 40px;
  height: 40px;
  background: linear-gradient(135deg, #3b82f6, #06b6d4);
  border-radius: 8px;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  animation: squareSlideIn 2.5s ease-in-out forwards;
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
}

.square-left {
  left: -60px;
  transform-origin: right center;
}

.square-right {
  right: -60px;
  transform-origin: left center;
}

.loading-dots::after {
  content: '.';
  animation: loadingDots 1.5s infinite;
  color: #9ca3af;
}

/* Ensure the loading screen disappears after animation */
.loading-screen[style*="visibility: hidden"] {
  display: none !important;
}

/* Blog-style Grid Utilities */
.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.line-clamp-3 {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

/* Post Grid Hover Effects */
.post-grid:hover .post-grid-thumbnail img {
  transform: scale(1.05);
}

.post-grid {
  transition: all 0.3s ease;
}

.post-grid:hover {
  transform: translateY(-4px);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
}
